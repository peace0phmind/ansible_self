---
- hosts: tf

  tasks:
    - name: add aliyun repository mirror
      become: true
      apt_repository:
        repo: deb http://mirrors.aliyun.com/ubuntu/ xenial main
        state: present

    - apt_repository:
        repo: deb-src http://mirrors.aliyun.com/ubuntu/ xenial main
        state: present
      become: true

    - name: Update all packages to the latest version
      apt:
        upgrade: dist
      become: true

    - name: install zsh
      apt:
        name: zsh
      become: true

    - user:
        name: "{{ ansible_ssh_user }}"
        shell: /bin/zsh
      become: true
    
    - name: check if oh_my_zsh installed, otherwise install it.
      stat: path=~/.oh-my-zsh
      register: oh_my_zsh
    
    - name: Download zsh installer
      get_url: 
        url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
        dest: /tmp/zsh-installer.sh
        mode: 0755
      when: oh_my_zsh.stat.exists == False

    - name: Execute the zsh-installer.sh
      command: sh -c /tmp/zsh-installer.sh
      when: oh_my_zsh.stat.exists == False

    - copy:
        src: tf.zsh-theme
        dest: ~/.oh-my-zsh/themes
        mode: 0644

    - lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME=".*"$'
        line: 'ZSH_THEME="tf"'

    # install anaconda3 on remote host
    - stat: path=~/anaconda3
      register: anaconda3

    - script: res/Anaconda3-4.4.0-Linux-x86_64.sh -b
      when: anaconda3.stat.exists == false

    - name: set anaconda path in .zshrc file
      lineinfile: 
        state: present
        dest: ~/.zshrc
        regexp: '^export PATH={{ ansible_env.HOME }}/anaconda3/bin:\$PATH'
        line: 'export PATH={{ ansible_env.HOME }}/anaconda3/bin:$PATH'


    - name: add ppa repository for nvidia driver install
      become: true
      apt_repository:
        repo: 'ppa:graphics-drivers/ppa'

    - name: install nvidia drivers
      apt:
        name: nvidia-375
      become: true

    - name: Verify You Have a CUDA-Capable GPU
      shell: lspci | grep -i nvidia
      register: nvidia_card_check

    - name: install nvidia drivers
      apt:
        name: nvidia-375
      become: true
      when: nvidia_card_check|failed

    - name: set opt directory owner and group to mind
      become: true
      file:
        path: /opt
        state: directory
        owner: mind
        group: mind
        #recurse: yes

    - name: Mount sdb1 to /opt
      become: true 
      mount:
        path: /opt
        src: /dev/sdb1
        fstype: ext4
        state: mounted

    - name: install nfs server and exports home dir
      become: true
      apt:
        name: nfs-kernel-server

    - name: change /etc/exports file
      become: true 
      lineinfile:
        state: present
        dest: /etc/exports
        regexp: '/home/mind            192.168.10.1/24\(ro,sync,insecure,no_root_squash,no_subtree_check\)'
        line: '/home/mind            192.168.10.1/24(ro,sync,insecure,no_root_squash,no_subtree_check)'
      register: exports_file_change

    - name: restart nfs server
      become: true
      service: name=nfs-kernel-server state=restarted
      when: exports_file_change|failed

